package padcms.dao.application.bean;

import java.util.ArrayList;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit. 
/**
 * Entity mapped to table NOTE.
 */
public class Issue implements Cloneable, Comparable<Issue> {

	private Long id;
	private String title;
	private String state;
	private Long product_id;
	private Long application_id;
	private Long issue_number;

	// private String paid;
	// private String updated;

	// private String subscription_type;

	// private String release_date;

	private ArrayList<Revision> revisionList;

	public Issue() {
	}

	public Issue(Long id, String title, String state, Long product_id,
			Long application_id, Long issue_number

	) {

		this.id = id;
		this.title = title;
		this.state = state;
		this.product_id = product_id;
		this.application_id = application_id;
		this.issue_number = issue_number;
		// this.paid = paid;
		// this.updated = updated;

		// this.subscription_type = subscription_type;

		// this.release_date = release_date;
	}

	public Issue(Long id) {
		this.id = id;
	}

	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public String getTitle() {
		return title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	public String getState() {
		return state;
	}

	public void setState(String state) {
		this.state = state;
	}

	public Long getProduct_id() {
		return product_id;
	}

	public void setProduct_id(Long product_id) {
		this.product_id = product_id;
	}

	public Long getApplication_id() {
		return application_id;
	}

	public void setApplication_id(Long application_id) {
		this.application_id = application_id;
	}

	public ArrayList<Revision> getRevisionList() {
		return revisionList;
	}

	public void setRevisionList(ArrayList<Revision> revisionList) {
		this.revisionList = revisionList;
	}

	public Long getIssue_number() {
		return issue_number;
	}

	public void setIssue_number(Long issue_number) {
		this.issue_number = issue_number;
	}

	public Revision getRevision(Long id) {
		for (Revision revision : getRevisionList()) {
			if (revision.getId().equals(id)) {
				return revision;
			}
		}
		return null;
	}

	public Revision getPublishedRevision() {
		for (Revision revision : getRevisionList()) {
			if (revision.getState().equals("published")) {
				revision.setParenIssue(this);
				return revision;
			}
		}
		return null;
	}

	public String getNameOfArchiveOfIssue() {
		Revision publishRevision = this.getPublishedRevision();
		return String.valueOf(publishRevision.getId());
	}

	public String getIssueRevisionFolderName() {
		Revision publishRevision = this.getPublishedRevision();
		String issueRevisionFolderName = this.getId() + "_"
				+ publishRevision.getId();
		return issueRevisionFolderName;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((application_id == null) ? 0 : application_id.hashCode());
		// result = prime * result + ((color == null) ? 0 : color.hashCode());
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		// result = prime * result + ((paid == null) ? 0 : paid.hashCode());
		result = prime * result
				+ ((product_id == null) ? 0 : product_id.hashCode());
		result = prime * result
				+ ((revisionList == null) ? 0 : revisionList.hashCode());
		result = prime * result + ((state == null) ? 0 : state.hashCode());
		// result = prime
		// * result
		// + ((subscription_type == null) ? 0 : subscription_type
		// .hashCode());
		result = prime * result + ((title == null) ? 0 : title.hashCode());
		// result = prime * result + ((updated == null) ? 0 :
		// updated.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Issue other = (Issue) obj;
		if (application_id == null) {
			if (other.application_id != null)
				return false;
		} else if (!application_id.equals(other.application_id))
			return false;

		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		// if (paid == null) {
		// if (other.paid != null)
		// return false;
		// } else if (!paid.equals(other.paid))
		// return false;
		if (product_id == null) {
			if (other.product_id != null)
				return false;
		} else if (!product_id.equals(other.product_id))
			return false;
		if (revisionList == null) {
			if (other.revisionList != null)
				return false;
		} else if (!revisionList.equals(other.revisionList))
			return false;
		if (state == null) {
			if (other.state != null)
				return false;
		} else if (!state.equals(other.state))
			return false;
		// if (subscription_type == null) {
		// if (other.subscription_type != null)
		// return false;
		// } else if (!subscription_type.equals(other.subscription_type))
		// return false;
		if (title == null) {
			if (other.title != null)
				return false;
		} else if (!title.equals(other.title))
			return false;
		// if (updated == null) {
		// if (other.updated != null)
		// return false;
		// } else if (!updated.equals(other.updated))
		// return false;
		return true;
	}

	@Override
	public Object clone() throws CloneNotSupportedException {
		return super.clone();
	}

	@Override
	public int compareTo(Issue another) {
		return this.issue_number.compareTo(another.issue_number);
	}
}
